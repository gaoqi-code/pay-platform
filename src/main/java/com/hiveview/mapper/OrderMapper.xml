<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hiveview.dao.OrderMapperDao" >
  <resultMap id="BaseResultMap" type="com.hiveview.entity.OrderInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="data_status" property="dataStatus" jdbcType="INTEGER" />
    <result column="total_fee" property="totalFee" jdbcType="DECIMAL" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="trade_no" property="tradeNo" jdbcType="VARCHAR" />
    <result column="notify_url" property="notifyUrl" jdbcType="VARCHAR" />
    <result column="return_url" property="returnUrl" jdbcType="VARCHAR" />
    <result column="business_no" property="businessNo" jdbcType="VARCHAR" />
    <result column="from_ip" property="fromIp" jdbcType="VARCHAR" />
    <result column="from_os" property="fromOs" jdbcType="VARCHAR" />

  </resultMap>
  <sql id="Base_Column_List" >
    id, product_name, data_status, total_fee, add_time, update_time, user_id, order_no,trade_no,notify_url,return_url,business_no,from_ip,from_os
  </sql>

  <select id="getOrderInfoByOrderNo" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sys_orders
    where order_no = #{orderNo}
  </select>


  <insert id="saveOrderInfo" parameterType="com.hiveview.entity.OrderInfo" >
   INSERT INTO sys_orders(
	id,
	product_name,
	data_status,
	total_fee,
	add_time,
	update_time,
	user_id,
	order_no,
	trade_no,
	notify_url,
	return_url,
	business_no,
	from_ip,
	from_os
    )
  VALUES
	(
		#{id,jdbcType=INTEGER},
		#{productName,jdbcType=VARCHAR},
		#{dataStatus,jdbcType=INTEGER},
		#{totalFee,jdbcType=DECIMAL},
		#{addTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP},
		#{userId,jdbcType=INTEGER},
		#{orderNo,jdbcType=VARCHAR},
		#{tradeNo,jdbcType=VARCHAR},
		#{notifyUrl,jdbcType=VARCHAR},
		#{returnUrl,jdbcType=VARCHAR},
		#{businessNo,jdbcType=VARCHAR},
		#{fromIp,jdbcType=VARCHAR},
		#{fromOs,jdbcType=VARCHAR}

	)
  </insert>

  <update id="updateOrderInfo" parameterType="com.hiveview.entity.OrderInfo" >
    update sys_orders
    <set >
      <if test="productName != null" >
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="dataStatus != null" >
        data_status = #{dataStatus,jdbcType=INTEGER},
      </if>
      <if test="totalFee != null" >
        total_fee = #{totalFee,jdbcType=DECIMAL},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="tradeNo != null" >
          trade_no = #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="notifyUrl != null" >
          notify_url = #{notifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="returnUrl != null" >
          return_url = #{returnUrl,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.hiveview.entity.OrderInfo" >
    update sys_orders
    set product_name = #{productName,jdbcType=VARCHAR},
      data_status = #{dataStatus,jdbcType=INTEGER},
      total_fee = #{totalFee,jdbcType=DECIMAL},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      order_no = #{orderNo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>